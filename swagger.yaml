swagger: "2.0"
info:
  version: tb-pipeline-dev-0-001
  title: "White Label API"
  description: User API spec for the white label project.
  contact:
    name: TravelBytes Team
    email: info@travelbytes.biz
    url: http://travelbytes.biz
host: tb-pipeline-dev.appspot.com
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:

  # Security
  /api/login:
    post:
      tags:
        - security
      summary: Logs in a currently registered user
      operationId: login
      parameters:
        - name: loginBody
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        200:
          description: Login successful
          schema:
            $ref: "#/definitions/UserDetail"
        401:
          description: Unauthorised/Invalid/Disabled/Locked out user
          schema:
            $ref: "#/definitions/MessageResponse"
        404:
          description: Missing required field
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/logout:
    get:
      tags:
        - security
      summary: Logs out the currently registered user
      operationId: logout
      responses:
        200:
          description: Logout successful
  /api/user/register:
    post:
      tags:
        - security
      summary: Registers a new user
      operationId: registerUser
      parameters:
        - name: registerBody
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - captcha
            properties:
              email:
                type: string
                format: email
              captcha:
                description: Captcha response (not too sure what's the payload yet placeholder for now)
                type: string
              givenName:
                description: User's given name entry
                type: string
              surname:
                description: User's surname entry
                type: string
              mobile_api_key:
                description: (DEV only) overrides captcha requirements
                type: string
      responses:
        200:
          description: Registration successful and confirmation email sent
          schema:
            $ref: "#/definitions/TokenResponse"
        400:
          description: Invalid email address entered
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/user/confirm:
    post:
      tags:
        - security
      summary: Confirms a new user or reset password request
      operationId: actionConfirm
      parameters:
        - name: confirmActionBody
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - pin
              - token
            properties:
              email:
                description: Email used in registration
                type: string
              pin:
                description: 6-digit one time PIN
                type: number
              token:
                description: Token session value
                type: string
              action:
                description: Action type for logging purposes
                type: string
      responses:
        200:
          description: Confirmation or password reset successful
          schema:
            $ref: "#/definitions/EmptyResponse"
        400:
          description: No user found for email
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Expired token / Token and email mismatch / Token and PIN mismatch
          schema:
            $ref: "#/definitions/MessageResponse"
        404:
          description: Invalid user key
          schema:
            $ref: "#/definitions/MessageResponse"

  /api/user/payment/update-card:
    post:
      tags:
        - security
      summary: Adds or updates a user's credit card details
      operationId: updateCard
      parameters:
        - name: updateCardBody
          in: body
          required: true
          schema:
            type: object
            required:
              - duration
              - cardNumber
              - expirationMonth
              - expirationYear
              - cvv
            properties:
              duration:
                description: subscription duration
                type: string
              cardNumber:
                description: credit card number
                type: string
              expirationMonth:
                type: number
              expirationYear:
                type: string
              cvv:
                type: string
      responses:
        200:
          description: Payment information successfully updated for user
          schema:
            type: object
            required:
              - cardNumberPreview
            properties:
              cardNumberPreview:
                description: Part of the user's credit card number, so they know what card they've entered
                type: string
        401:
          description: Invalid user / Not logged in
          schema:
            $ref: "#/definitions/MessageResponse"

  /api/user/payment/update-billing:
    post:
      tags:
        - security
      summary: Adds or updates a user's billing information
      operationId: updateBilling
      parameters:
        - name: updateBillingBody
          in: body
          required: true
          schema:
            type: object
            required:
              - streetAddress
              - city
              - state
              - postalCode
            properties:
              streetAddress:
                type: string
              city:
                type: string
              state:
                type: string
              postalCode:
                type: string
      responses:
        200:
          description: Billing information successfully updated
          schema:
            $ref: "#/definitions/TokenResponse"
        401:
          description: Invalid user / Not logged in
          schema:
            $ref: "#/definitions/MessageResponse"
            
  /api/user/resetpassword:
    post:
      tags:
        - security
      summary: Resets a user password
      operationId: resetPassword
      parameters:
        - name: resetPasswordBody
          in: body
          required: true
          schema:
            type: object
            required:
              - password
              - confirm_password
              - old_password
            properties:
              password:
                description: New password
                type: string
              confirm_password:
                description: New password confirmation
                type: string
              old_password:
                description: Previous password if changing in app
                type: string
      responses:
        200:
          description: Confirmation or password reset successful
          schema:
            $ref: "#/definitions/EmptyResponse"
        400:
          description: Passwords do not match / Previous password is invalid
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/user/forgot:
    post:
      tags:
        - security
      summary: Forgotten password
      operationId: forgotPassword
      parameters:
        - name: forgotPasswordBody
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - captcha
            properties:
              email:
                description: User email address
                type: string
              captcha:
                description: Captcha response (not too sure what's the payload yet placeholder for now)
                type: string
              mobile_api_key:
                description: (DEV only) overrides captcha requirements
                type: string
      responses:
        200:
          description: Email with reset password instructions sent
          schema:
            $ref: "#/definitions/TokenResponse"
        400:
          description: Invalid user
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: User disabled
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/user/detail:
    get:
      tags:
        - security
      summary: Get current user login details
      operationId: getUserDetail
      responses:
        200:
          description: Successfully retrieved user details
          schema:
            $ref: "#/definitions/UserDetail"
  /api/user/name/change:
    post:
      tags:
        - security
      summary: Change user name details
      operationId: changeUserName
      parameters:
        - name: userNameBody
          in: body
          required: true
          schema:
            type: object
            properties:
              givenName:
                description: User given name
                type: string
              surname:
                description: User surname
                type: string
      responses:
        200:
          description: Successfully updated user name deatails
          schema:
            $ref: "#/definitions/UserSettings"
        401:
          description: Invalid user / Not logged in
          schema:
            $ref: "#/definitions/MessageResponse"


  # Client
  /api/client/{clientCode}/logo:
    get:
      tags:
        - client
      summary: Client logo retrieval
      operationId: getClientLogo
      produces: 
        - text/plain
        - application/json
      parameters:
        - name: clientCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful retrieval of client logo URL
          schema:
            type: string
            format: uri
        400:
          description: Missing and/or invalid client code
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorised access / Login required
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/client/setup:
    post:
      tags:
        - client
      summary:  Agent setup for client information
      operationId: setupClient
      parameters:
        - name: clientInfo
          in: body
          required: true
          schema:
            $ref: "#/definitions/ClientInfoSetupRequest"
      responses:
        200:
          description: Successful setup/update of client info
          schema:
            $ref: "#/definitions/ClientInfoResponse"
        400:
          description: Missing and/or invalid client code/name/terms
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorised access / Login required
          schema:
            $ref: "#/definitions/MessageResponse"
  
  
  # Segment
  /api/segments/all:
    get:
      tags:
        - segment
      summary: Retrieve user travel segments
      description: |
        Returns a list of user trip segments ordered by date.
        Each list item properties are determined by segment type.
        The listed properties in the schema description are the properties 
        common to all segments.
        Note that properties beginning with '_' is for internal use and will be 
        removed in future.

      operationId: listSegments
      responses:
        200:
          description: Successfully retrieved user segments
          schema:
            $ref: "#/definitions/AllSegments"
        401:
          description: Unauthorised access / Login required
          schema:
            $ref: "#/definitions/MessageResponse"


  # Hotel
  /api/hotel/search:
    post:
      tags:
        - hotel
      summary: Searches for hotels on Expedia based on filter parameters
      operationId: hotelSearch
      parameters:
        - name: searchBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/HotelSearchRequest"
      responses:
        200:
          description: Successfully retrieved hotel results
          schema:
            $ref: "#/definitions/HotelListResults"
        400:
          description: Expedia API error / Missing and/or invalid parameters
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorised access / Login required
          schema:
            $ref: "#/definitions/MessageResponse"
  /api/hotel/detail:
    post:
      tags:
        - hotel
      summary: Retrieves detailed hotel information from Expedia
      operationId: getHotelDetail
      parameters:
        - name: detailBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/HotelDetailRequest"
      responses:
        200:
          description: Successfully retrieved hotel details
          schema:
            $ref: "#/definitions/HotelDetailResponse"
        400:
          description: Expedia API error / Missing and/or invalid parameters
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorised access / Login required
          schema:
            $ref: "#/definitions/MessageResponse"
          
            
  # Transform Component
  /transform/xml:
    post:
      tags:
        - transform
      summary: Transforms XML using XSLT
      operationId: xmlTransform
      produces:
        - application/json
        - text/xml
      parameters:
        - name: api_key
          in: query
          description: API key required for access
          required: true
          type: string
        - name: loginBody
          in: body
          required: true
          schema:
            type: object
            required:
              - xml
              - gds
            properties:
              xml:
                description: XML to transform
                type: string
              gds:
                description: GDS field to determine transform to apply [1A, 1G, 1S]
                type: string
      responses:
        200:
          description: Transform successful
          schema:
            type: object
            properties:
              tbxml:
                type: string
        400:
          description: Missing XML or GDS
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Invalid or missing API key
          schema:
            $ref: "#/definitions/MessageResponse"
        404:
          description: Error in transforming XML
          schema:
            $ref: "#/definitions/MessageResponse"
  /transform/xml/message:
    post:
      tags:
        - transform
      summary: Subscriber handler for receiving incoming transform request messages
      description: Might be changed to use the admin /_ah/push-handler prefix if testing with it can be figured out
      operationId: messageTransformXml
      parameters:
        - name: api_key
          in: query
          description: API key required for access
          required: true
          type: string
        - name: subscription
          in: body
          schema:
            $ref: '#/definitions/PushMessage'
      responses:
        200:
          description: Transform successful
          schema:
            $ref: '#/definitions/EmptyResponse'
        250:
          description: Transformation error / Missing xml file
          schema:
            $ref: "#/definitions/MessageResponse"
        400:
          description: No record for id exists
          schema:
            $ref: "#/definitions/MessageResponse"


  # Actions
  /action/delete:
    post:
      tags:
        - action
      summary: De-activates search action.
      description: |
        Take note that this might change in future once 
        new business rules for search result population 
        are in place.
      operationId: deleteAction
      parameters:
        - name: api_key
          in: query
          description: API key required for access if not logged in
          required: true
          type: string
        - name: deleteActionBody
          in: body
          required: true
          schema:
            type: object
            required:
              - id
              - actionId
            properties:
              id:
                description: QiTransaction Id 
                type: number
              actionId:
                description: Id to de-activate the search
                type: number
              searchType:
                description: |
                  Type of action search to de-active ['hotelSearch']. 
                  Defaults to all if none specified.
                type: string
      responses:
        200:
          description: De-activation successful
          schema:
            $ref: "#/definitions/EmptyResponse"
        400:
          description: Invalid QiTransaction / Action Id 
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Invalid or missing API key / Not logged in
          schema:
            $ref: "#/definitions/MessageResponse"
          
  /action/search/hotel:
    post:
      tags:
        - action
      summary: Subscriber handler that performs the search action for hotel cross-selling
      operationId: searchHotel
      parameters:
        - name: api_key
          in: query
          description: API key required for access
          required: true
          type: string
        - name: subscription
          in: body
          schema:
            $ref: '#/definitions/PushMessage'
      responses:
        200:
          description: Transform successful
          schema:
            $ref: '#/definitions/EmptyResponse'


  # Crons
  /action/admin/cron/clear_daily_searches:
    get:
      tags:
        - cron
      summary: Daily cron job that de-activates search actions older than a day
      operationId: clearExpiredActions
      responses:
        200:
          description: De-activation successful
          schema:
            $ref: '#/definitions/EmptyResponse'

            
# Object Definitions
definitions:
  EmptyResponse:
    description: No data being returned
    type: object
  
  UserDetail:
    description: Logged in user account details
    type: object
    required:
     - givenName
     - surname
     - email
     - userKey
    properties:
      incomingEmail:
        description: User system unique email address
        type: string
        format: email
      givenName:
        description: User's given name
        type: string
      surname:
        description: User's surname
        type: string
      email:
        description: User login email
        type: string
        format: email
      userKey:
        description: User key id
        type: integer
      failedAttempts: 
        description: Number of prior failed attempts
        type: integer
      roles:
        description: List of roles assigned to the user
        type: array
        items: 
          type: string
      userSettings:
        $ref: "#/definitions/UserSettings"

  UserSettings:
    description: List of user settings
    type: array
    items:
      type: object
      properties:
        name:
          description: User setting name
          type: string
        value:
          description: User setting value
          type: string
    
  MessageResponse:
    type: object
    required:
     - code
     - message
    properties:
      code:
        description: Message code
        type: string
      message:
        description: Message description
        type: string
        
  TokenResponse:
    type: object
    required:
     - token
    properties:
      token:
        description: Token value used for authentication (string of numbers)
        type: string

  PushMessage:
    description: Push message sent to a subscriber
    type: object
    required:
      - subscription
      - message
    properties:
      subscripton:
        description: Full subscription string as on GCP
        type: string
      message:
        $ref: '#/definitions/PushSubMessage'
            
  PushSubMessage:
    description: Message payload published together during a PubSub. Either the data or attributes property must be populated
    type: object
    properties:
      data:
        description: Data sent in b64 encoded format
        type: string
      attributes: 
        description: Object consisting of key/value pairs, if data is empty, this must be populated
        type: object
      messageId:
        description: Id of the published message, this is autopopulated by the publisher server
        type: number
      publishTime:
        description: Time of published message, this is autopopulated by the publisher server
        type: string
        format: date-time
      force:
        description: Force reprocessing of xml transformation regardless of status
        type: boolean

  ClientInfoSetupRequest:
    description: Client information
    type: object
    required:
      - code
      - name
      - terms
    properties:
      code:
        description: Client code
        type: string
      name: 
        description: Client name
        type: string
      terms:
        description: Client T&Cs
        type: string
      logo:
        description: Base-64 encoded logo contents
        type: string
      logoFileName:
        description: Logo filename
        type: string
      gds:
        description: Client GDS code (Not in use yet)
        type: string
        
  ClientInfoResponse:
    description: Client information
    type: object
    properties:
      code:
        description: Client code
        type: string
      name: 
        description: Client name
        type: string
      terms:
        description: Client T&Cs
        type: string
      logo:
        description: Logo path
        type: string
      logoPath:
        description: Public logo URL
        type: string
      gds:
        description: Client GDS code (Not in use yet)
        type: string
    
  AllSegments:
    description: List of all user trip segments ordered by start date. 
    type: object
    properties:
      id:
        description: Database table primary key identifier
        type: string
      qitransaction_id:
        description: QiTransaction Id
        type: string
      agencyRef: 
        description: PNR / RLOC
        type: string
      bookingNames: 
        description: Comma separated list of Surname/GivenNames of passengers
        type: string
      statusCode:
        description: Status code of segment
        type: string
      status:
        description: Decoded status
        type: string
      startLocalDateTime:
        description: Starting time of segment in local time
        type: string
        format: date-time
      endLocalDateTime:
        description: Ending time of segment in local time
        type: string
        format: date-time
      startUtcDateTime:
        description: Starting time of segment in UTC time (Not available yet)
        type: string
        format: date-time
      endUtcDateTime:
        description: Ending time of segment in UTC time (Not available yet)
        type: string
        format: date-time
      startLocationId:
        description: Foreign key to location table for starting location (Not available yet)
        type: string
      endLocationId:
        description: Foreign key to location table for ending location (Not available yet)
        type: string
      created:
        description: When segment record was created
        type: string
        format: date-time
      updated:
        description: When segment record was last updated
        type: string
        format: date-time
        
  HotelSearchRequest:
    type: object
    required:
      - checkIn
      - checkOut
      - location
      - rooms
    properties:
      checkIn:
        description: Check in date
        type: string
        format: date-time
      checkOut:
        description: Check out date
        type: string
        format: date-time
      location:
        description: Search string for hotel general location
        type: string
      rooms:
        description: |
          Rooms required and occupancy breakdown.
          Each entry corresponds to a room.
        type: array
        items:
          type: object
          properties:
            adults:
              description: Number of adults in the room
              type: number
            childAges:
              description: List of child ages in the room
              type: array
              items:
                type: number
      limit:
        description: |
          Number of results to limit to. 
          If not specified will default to 1000.
        type: number
      detail:
        description: |
          Level of detail in search results based on Expedia API.
          Defaults to "low" when not supplied.
          - lowest
          - low
          - medium
          - high
        type: string
        
  HotelListResults:
    type: object
    properties:
      hotelList:
        description: List of hotels from successful search
        type: array
        items:
          type: object
          properties:
            hotelName:
              description: Name of hotel
              type: string
            description:
              description: Short description as a hotel teaser
              type: string
            reviewRating: 
              description: User review rating
              type: number
              format: float
            starRating: 
              description: Hotel star rating
              type: number
              format: float
            rate: 
              description: Total price of hotel inclusive of fees for period of stay
              type: string
            location:
              description: More precise location of hotel
              type: string
              format: currency value
            image:
              description: URL for hotel thumbnail image
              type: string
              format: uri
            detailLink:
              description: URL for detailed information retrieval
              type: string
              format: uri
              
  HotelDetailRequest:
    type: object
    required:
      - detailUrl
    properties:
      detailUrl:
        description: Detail URL of room type given in Expedia RoomTypes
        type: string
        format: uri
      locale:
        description: Localization locale
        type: string
      imageSizes:
        description: |
          Size of images to return in links.
          Defaults to "z" when not supplied.
          - thumbnail
          - small
          - big
          - y (500x500)
          - z (1000x1000)
        type: string
      roomImageSizes:
        description: |
          Size of images to return in room listings.
          Defaults to "big" when not supplied.
          - thumbnail
          - small
          - big
          - y (500x500)
          - z (1000x1000)
        type: string
  
  HotelDetailResponse:
    description: |
      Returns a response payload wihich is detailed here:
      https://expediaintegration.zendesk.com/hc/en-us/articles/115003581048-XAPv3-Hotel-Details-API
    type: object
    properties:
      roomTypes:
        description: |
          A listing of the room types available based on criteria obtained from the detail link.
          The details of the returned room properties are detailed here under the RoomType section of the Response Message:
          https://expediaintegration.zendesk.com/hc/en-us/articles/115003581028-XAPv3-Hotel-Search-API
        type: object
      details:
        description: |
          Returns a response payload wihich is detailed here:
          https://expediaintegration.zendesk.com/hc/en-us/articles/115003581048-XAPv3-Hotel-Details-API
        type: object